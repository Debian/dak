---
.template: &template
  except:
    - deploy@ftp-team/dak

test stretch:
  <<: *template
  image: debian:stretch
  parallel: 5
  script: debian/run-ci

test buster:
  <<: *template
  image: debian:buster
  parallel: 5
  script: debian/run-ci --with-coverage
  artifacts:
    expire_in: 1 day
    paths:
      - coverage
      - output

unit test buster python3:
  <<: *template
  image: debian:buster
  script:
  - apt-get update
  - apt-get install -y --no-install-recommends 2to3 bzip2 gnupg gzip python3-apt python3-coverage python3-debian python3-debianbts python3-ldap python3-psycopg2 python3-pytest python3-pytest-cov python3-rrdtool python3-sqlalchemy python3-tabulate python3-yaml xz-utils
  - mkdir test-gnupghome
  - 2to3 -wn -x future -x import dak/*.py daklib/*.py
  - GNUPGHOME=$(pwd)/test-gnupghome py.test-3 -v daklib tests

tests buster python3:
  <<: *template
  image: debian:buster
  # doesn't succeed for now, don't waste ci time by running this all the time,
  # but define it here for people who want to try
  when: manual
  script: debian/run-ci --python3
  artifacts:
    paths:
      - coverage
      - output

flake8:
  <<: *template
  image: debian:9
  script:
    - apt-get update
    - apt-get install -y python-flake8
    - python -mflake8

get coverage:
  image: debian:buster
  stage: coverage
  dependencies:
    - test buster
  script:
    - debian/run-coverage
  artifacts:
    paths:
      - coverage
      - logs

pages:
  image: debian:9
  script:
    - apt-get update
    - apt-get install -y python-epydoc
    - mkdir -p public/epydoc
    - epydoc -q --html --graph all --css white -n DAK -o public/epydoc --include-log --show-imports dak dakweb
    - mv coverage public/coverage
  stage: deploy
  artifacts:
    paths:
      - public
  only:
    - master

stages:
  - test
  - coverage
  - deploy
