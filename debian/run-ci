#! /bin/bash
#
# © 2018 Ansgar Burchardt <ansgar@debian.org>
# © 2020 Ivo De Decker <ivodd@debian.org>
# License: GPL-2+
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

run_apt-get() {
    if [ "$UID" = 0 ]
    then
        apt-get $@
    else
        echo not running apt-get $@
    fi
}

if [ "x$1" = "x--with-coverage" ]; then
    RUN_COVERAGE=y
else
	RUN_COVERAGE=
fi

export RUN_COVERAGE

if [ "x$1" = "x--python3" ]; then
    DAK_PYTHON3=y
else
    DAK_PYTHON3=
fi

export DAK_PYTHON3

set -eu

if [ ! -f dak/dak.py ]; then
  echo >&2 "E: run-ci must be invoked in the root directory of dak"
  exit 1
fi

run_apt-get update
run_apt-get install -y build-essential
run_apt-get build-dep -y .

if [ "x$DAK_PYTHON3" = "x" ]; then
    dpkg-buildpackage -b
else
    run_apt-get install -y --no-install-recommends \
        2to3 \
        python3-coverage \
        python3-debian \
        python3-debianbts \
        python3-ldap \
        python3-psycopg2 \
        python3-pytest \
        python3-pytest-cov \
        python3-rrdtool \
        python3-sqlalchemy \
        python3-tabulate \
        python3-yaml \
        python3-apt \


cleanup-newroot() {
  if [[ -v DAK_NEWROOT ]]; then
    rm -rf -- "${DAK_NEWROOT}"
  fi
}

    export DAK_NEWROOT=$(mktemp -d)
    trap cleanup-newroot EXIT
    export DAK_ROOT=$DAK_NEWROOT
    export BASEDIR="$(cd $(dirname "${BASH_SOURCE}")/..; pwd)"
    for dir in dak daklib
    do
        cp -a ${BASEDIR}/${dir}/ ${DAK_ROOT}/${dir}
        2to3 -wn -x future -x import ${DAK_ROOT}/${dir}
    done
    for filename in tests integration-tests setup templates .coveragerc
    do
        ln -s ${BASEDIR}/${filename} ${DAK_ROOT}/${filename}
    done

    mkdir -p $DAK_ROOT/test-gnupghome
    export GNUPGHOME=${DAK_ROOT}/test-gnupghome

    cd ${DAK_ROOT}

    PYTEST_COV_OPTIONS=" --cov-branch --cov --cov-report= "
    py.test-3 -v ${PYTEST_COV_OPTIONS} daklib tests

    make -C tests/fixtures/packages

    ./integration-tests/run-tests
    python3-coverage combine --append
    python3-coverage report -m
    echo
    python3-coverage html -d ${BASEDIR}/coverage
fi
