#! /bin/bash
#
# © 2018 Ansgar Burchardt <ansgar@debian.org>
# © 2020 Ivo De Decker <ivodd@debian.org>
# License: GPL-2+
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

run_apt-get() {
    if [ "$UID" = 0 ]
    then
        apt-get $@
    else
        echo not running apt-get $@
    fi
}

# salsa ci total number of parallel jobs
if [[ ! -v CI_NODE_TOTAL ]]; then
    export CI_NODE_TOTAL=1
fi
# salsa ci number for this specific job (from 1 to $CI_NODE_TOTAL)
if [[ ! -v CI_NODE_INDEX ]]; then
    export CI_NODE_INDEX=1
fi

MY_CI_COUNTER=0

run_this_test() {
    MY_MODULO=$(( $MY_CI_COUNTER % $CI_NODE_TOTAL + 1 ))
    echo "run_this_test: $MY_MODULO $MY_CI_COUNTER"
    MY_CI_COUNTER=$(( MY_CI_COUNTER + 1 ))
    [[ $MY_MODULO = $CI_NODE_INDEX ]]
}

if [ "x$1" = "x--with-coverage" ]; then
    RUN_COVERAGE=y
    PYTEST_COV_OPTIONS=" --cov-branch --cov --cov-report= "
else
    RUN_COVERAGE=
    PYTEST_COV_OPTIONS=""
fi

export RUN_COVERAGE

copy_coverage_data() {
    t="$1"
    if [ "$RUN_COVERAGE" = "y" ]; then
        TESTNAME=${t##*/}
        DESTDIR=${BASEDIR}/coveragedata/data_${TESTNAME}
        echo copy coverage data for $TESTNAME to $DESTDIR
        mkdir -p $DESTDIR
        [ -e .coverage ] && cp .coverage $DESTDIR/.coverage.data.${TESTNAME/}
        cp .coverage.* $DESTDIR || true
    fi
}

if [ "x$1" = "x--python3" ]; then
    DAK_PYTHON3=y
    PYTEST=py.test-3
    COVERAGE_CMD=python3-coverage
    # always run coverage when running python3
    RUN_COVERAGE=y
    PYTEST_COV_OPTIONS=" --cov-branch --cov --cov-report= "
else
    DAK_PYTHON3=
    PYTEST=py.test
    COVERAGE_CMD=python-coverage
fi

export DAK_PYTHON3

set -eu

if [ ! -f dak/dak.py ]; then
  echo >&2 "E: run-ci must be invoked in the root directory of dak"
  exit 1
fi

run_apt-get update
run_apt-get install -y build-essential
run_apt-get build-dep -y .

export BASEDIR="$(cd $(dirname "${BASH_SOURCE}")/..; pwd)"
export DAK_ROOT=$BASEDIR

if [ "x$DAK_PYTHON3" != "x" ]; then
    run_apt-get install -y --no-install-recommends \
        2to3 \
        python3-coverage \
        python3-debian \
        python3-debianbts \
        python3-ldap \
        python3-psycopg2 \
        python3-pytest \
        python3-pytest-cov \
        python3-rrdtool \
        python3-sqlalchemy \
        python3-tabulate \
        python3-yaml \
        python3-apt \


cleanup-newroot() {
  if [[ -v DAK_NEWROOT ]]; then
    rm -rf -- "${DAK_NEWROOT}"
  fi
}

    export DAK_NEWROOT=$(mktemp -d)
    trap cleanup-newroot EXIT
    DAK_ROOT=$DAK_NEWROOT
    for dir in dak daklib
    do
        cp -a ${BASEDIR}/${dir}/ ${DAK_ROOT}/${dir}
        2to3 -wn -x future -x import ${DAK_ROOT}/${dir}
    done
    for filename in tests integration-tests setup templates .coveragerc
    do
        ln -s ${BASEDIR}/${filename} ${DAK_ROOT}/${filename}
    done

fi

mkdir -p $DAK_ROOT/test-gnupghome
export GNUPGHOME=${DAK_ROOT}/test-gnupghome

cd ${DAK_ROOT}

if run_this_test; then
    $PYTEST -v ${PYTEST_COV_OPTIONS} daklib tests
    copy_coverage_data "unit_tests"
else
    echo "not running unit tests in this job ($CI_NODE_INDEX/$CI_NODE_TOTAL)"
fi

make -C tests/fixtures/packages

TESTS="${DAK_ROOT}/integration-tests/tests/[0-9]*[^~] \
    ${DAK_ROOT}/tests/run-dbtests"

for t in $TESTS
do
    if run_this_test; then
        ./integration-tests/run-tests $t
        copy_coverage_data $t
    else
        echo "not running test $t in this job ($CI_NODE_INDEX/$CI_NODE_TOTAL)"
    fi

done
if [ "$RUN_COVERAGE" = "y" ]; then
    ${COVERAGE_CMD} combine --append
    ${COVERAGE_CMD} report -m
    echo
    ${COVERAGE_CMD} html -d ${BASEDIR}/coverage
fi
